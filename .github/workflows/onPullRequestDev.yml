name: Pull Request Development

on:
  pull_request:
    branches: [ development ]
    types: [opened, synchronize, reopened]

jobs:

  run_tests:
    runs-on: ubuntu-latest

    steps:
      - name: Checkout repository
        uses: actions/checkout@v2

      - name: Set up Node.js
        uses: actions/setup-node@v2
        with:
          node-version: 18

      - name: Install dependencies
        run: npm install -f

      - name: Create coverage
        run: npm run test -- --coverage
        
  notify_teams:
    needs: run_tests
    runs-on: ubuntu-latest
    if: ${{ success() }}
    
    steps:
      - uses: actions/checkout@v2
      - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.TEAMS_WEBHOOK }}
          # card-layout-start: compact
          environment: development
          show-on-failure: true   

  update_pr_status:
    runs-on: ubuntu-latest
    if: ${{ failure() && needs.run_tests.outputs.job_id == github.job }}
    needs: run_tests
    steps:
    - name: Check out code
      uses: actions/checkout@v2

    - name: Update PR Status
      env:
        GITHUB_TOKEN: ${{ github.token }}
      run: |
        PR_NUMBER=$(echo "${{ github.ref }}" | sed -n 's/refs\/pull\///p')
        PR_OWNER="${{ github.repository_owner }}"
        API_URL="https://api.github.com/repos/${{ PR_OWNER }}/${{ github.repository }}/statuses/${{ github.sha }}"
        
        curl -X POST \
          -H "Authorization: token $GITHUB_TOKEN" \
          -H "Accept: application/vnd.github.v3+json" \
          -d '{
            "state": "failure",
            "context": "Custom Status",
            "description": "Custom status description"
          }' \
          "$API_URL"        

  notify_teams_failed:
    needs: [update_pr_status]
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v2
      - uses: toko-bifrost/ms-teams-deploy-card@master #  or "./" if in a local set-up
        if: always()
        with:
          github-token: ${{ github.token }}
          webhook-uri: ${{ secrets.TEAMS_WEBHOOK }}
          card-layout-start: compact
          environment: development
          show-on-failure: true   
  